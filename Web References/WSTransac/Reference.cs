//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5446
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.5446.
// 
#pragma warning disable 1591

namespace EchoRequest.WSTransac {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WSTransacSoapBinding", Namespace="http://impl.transac.gtwin.conecta")]
    public partial class WSTransacService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback createAsyncCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback consultaExcallbyDboidOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WSTransacService() {
            this.Url = global::EchoRequest.Properties.Settings.Default.EchoRequest_WSTransac_WSTransacService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event createAsyncCallCompletedEventHandler createAsyncCallCompleted;
        
        /// <remarks/>
        public event consultaExcallbyDboidCompletedEventHandler consultaExcallbyDboidCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://impl.transac.gtwin.conecta", ResponseNamespace="http://impl.transac.gtwin.conecta", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("createAsyncCallReturn")]
        public string createAsyncCall(string xmlIn, string operacion, string token, string hash) {
            object[] results = this.Invoke("createAsyncCall", new object[] {
                        xmlIn,
                        operacion,
                        token,
                        hash});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createAsyncCallAsync(string xmlIn, string operacion, string token, string hash) {
            this.createAsyncCallAsync(xmlIn, operacion, token, hash, null);
        }
        
        /// <remarks/>
        public void createAsyncCallAsync(string xmlIn, string operacion, string token, string hash, object userState) {
            if ((this.createAsyncCallOperationCompleted == null)) {
                this.createAsyncCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateAsyncCallOperationCompleted);
            }
            this.InvokeAsync("createAsyncCall", new object[] {
                        xmlIn,
                        operacion,
                        token,
                        hash}, this.createAsyncCallOperationCompleted, userState);
        }
        
        private void OncreateAsyncCallOperationCompleted(object arg) {
            if ((this.createAsyncCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createAsyncCallCompleted(this, new createAsyncCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://impl.transac.gtwin.conecta", ResponseNamespace="http://impl.transac.gtwin.conecta", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("consultaExcallbyDboidReturn")]
        public string consultaExcallbyDboid(string dboid, string token, string hash) {
            object[] results = this.Invoke("consultaExcallbyDboid", new object[] {
                        dboid,
                        token,
                        hash});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void consultaExcallbyDboidAsync(string dboid, string token, string hash) {
            this.consultaExcallbyDboidAsync(dboid, token, hash, null);
        }
        
        /// <remarks/>
        public void consultaExcallbyDboidAsync(string dboid, string token, string hash, object userState) {
            if ((this.consultaExcallbyDboidOperationCompleted == null)) {
                this.consultaExcallbyDboidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconsultaExcallbyDboidOperationCompleted);
            }
            this.InvokeAsync("consultaExcallbyDboid", new object[] {
                        dboid,
                        token,
                        hash}, this.consultaExcallbyDboidOperationCompleted, userState);
        }
        
        private void OnconsultaExcallbyDboidOperationCompleted(object arg) {
            if ((this.consultaExcallbyDboidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.consultaExcallbyDboidCompleted(this, new consultaExcallbyDboidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void createAsyncCallCompletedEventHandler(object sender, createAsyncCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createAsyncCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createAsyncCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void consultaExcallbyDboidCompletedEventHandler(object sender, consultaExcallbyDboidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class consultaExcallbyDboidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal consultaExcallbyDboidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591